syntax = "proto2";

package gate;

import "common_rummy.proto";
//option go_package = "gitlab.fz.stevegame.red/back-end/common/client_pb/gate";

enum ErrCode {
    SUCCESS = 0;                // 成功
    UNKNOW = 1;                 // 未知错误
    ERR_PARAM = 2;              // 参数错误
    ERR_FAIL = 3;               // 失败
    ERR_USER_EXIST = 4;         // 用户已存在
    ERR_VIRIFY_CODE = 5;         // 验证码错误
    ERR_INVALID_TOKEN = 101;    // 无效的 token
    ERR_EXPIRE_TOKEN = 102;     // token 已经过期
    ERR_ALREADY_AUTHED = 103;   // 已经认证过了
}

// GateAuthReq 网关认证请求
message GateAuthReq {
    optional uint64 player_id = 1;  // 玩家 ID 
    // ...
    optional int64 expire = 14; // 认证到期时间
    optional string token = 15; // token 
}

// GateAuthRsp 网关认证应答
message GateAuthRsp {
    optional ErrCode err_code = 1;  // 错误码
}

// GateHeartBeatReq 心跳检测请求
message GateHeartBeatReq {
    optional uint64 time_stamp = 1;    // 时间
}

// GateHeartBeatRsp 心跳检测应答
message GateHeartBeatRsp {
    optional uint64 time_stamp = 1;    // 时间
}

// GateAnotherLoginNtf 顶号通知
message GateAnotherLoginNtf {
    optional uint32 reserve = 1;    // 保留
    optional string device = 2;     // 顶号设备
    optional int64 time_stamp = 3;  // 顶号时间
}


// GateNoLoginNtf 未登陆通知
message GateNoLoginNtf {
    optional uint32 reserve = 1;    // 保留
}

// GateTransmitHTTPReq 向平台服转发 HTTP 请求
message GateTransmitHTTPReq {
    optional string url = 1;        // url，不包括地址，如 /resetphone?account=xxx
    optional string method = 2;     // method， 如 POST、GET
    optional string content_type = 3;   // content_type， 对应 http 协议头的 Content-Type
    optional string data = 4;        // body 数据，对应 http 的 Body, json格式，服务器回自动转换成post-form格式
}

// GateTransmitHTTPRsp HTTP 响应
message GateTransmitHTTPRsp {
    optional int32 status_code = 1; // e.g 200
    optional string response_body = 2; // 响应数据
    optional string url = 3;           // url，不包括地址，如 /resetphone?account=xxx
    optional string err_msg = 4;       //错误描述

}

// GateRegisterReq 注册请求
message GateRegisterReq {
    optional string phone = 1;        // 手机号
    optional string password = 2;     // 密码
    optional string code = 3;        // 验证码
    optional string inviteKey = 4;   // 邀请码
    optional string source = 5;      // 来源
    optional int32 product_id = 6;   //产品ID
    optional int32 channel_id = 7;   //渠道ID

    optional string adid = 8;           // 广告 id，邀请码
    optional string version = 9;        // 客户端版本号
    optional string device = 10;        // 登录设备名
    optional string imei = 11;          // 登录设备 IMEI
    optional string sdk_data = 12;      // 用于LoeMaster sdk 基础数据
    optional string coordinate = 13;    // 地理坐标,x,y经纬度  用,分割。
    optional string language = 14;      // 手机系统语言
    optional string phone_name = 15;    // 手机名称
    optional string service_provider = 16;// 运营商
    optional  bool is_real = 17;          // 是否真金模式: 由客户端根据SDK提供
}

// GateRegisterRsp 注册响应
message GateRegisterRsp {
    optional ErrCode err_code = 1;  // 错误码
    optional string err_msg= 2;     // 错误内容
    optional uint64 player_id = 3;  // 玩家ID
    optional string token = 4;      // 登录sessionID，之后客户端可以使用 player_id + token 登录
    optional string  http_rsp = 5;   // java http服务器回复，json格式。
}


// GateResetPasswordReq 找回密码请求
message GateResetPasswordReq {
    optional string phone = 1;        // 手机号
    optional string password = 2;     // 新密码
    optional string code = 3;        // 验证码
    optional int32 channel_id = 4;   // 渠道ID
}

// GateResetPasswordRsp 找回密码响应
message GateResetPasswordRsp {
    optional ErrCode err_code = 1;  // 错误码
    optional string err_msg= 2;     // 错误内容
}

// GateSendSmsCodeReq 发送短信验证码请求
message GateSendSmsCodeReq {
    optional string phone = 1;        // 手机号
    optional common.RummySmsTempl tpl= 2; // 验证码模板类型, 2=注册模板， 3=重置密码
    optional int64 channel_id = 3;   // 渠道ID
}

// GateSendSmsCodeRsp 发送短信验证码响应
message GateSendSmsCodeRsp {
    optional ErrCode err_code = 1;   // 错误码
    optional string err_msg= 2;     // 错误内容
}

// GateGetPicCodeReq 获取图形验证码请求
message GateGetPicCodeReq {
    optional string phone = 1;        // 手机号
}


// GateGetPicCodeRsp 获取图形验证码响应
message GateGetPicCodeRsp {
    optional ErrCode err_code = 1;   // 错误码
    optional string buf = 2;        // 图形验证码数据
    optional string err_msg= 3;     // 错误内容
}


// GateTransferMsgFailNtf 转发消息失败通知
message GateTransferMsgFailNtf {
    optional uint32 msg_id = 1;      // 消息ID
    optional string fail_des=2;      // 失败描述
    optional bytes req_msg = 3;       // 请求数据
}



